@page "/educations"
@attribute [StreamRendering]

<PageTitle>Weather</PageTitle>
<div id="main">
    <h2 class="education-h1">National Chin-Yi University of Technology</h2>

    <p>Master Degree - Computer Science</p>
</div>
<div id="main">
    <h2 class="education-h1">Bina Nusantara University</h2>

    <p>Bachelor Degree - Computer Science</p>
</div>
<div id="main">
    <h2 class="education-h1">Politeknik Negeri Bandung</h2>

    <p>Diploma Degree - Computer Science</p>
</div>
@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        // Simulate asynchronous loading to demonstrate streaming rendering
        await Task.Delay(500);

        var startDate = DateOnly.FromDateTime(DateTime.Now);
        var summaries = new[] { "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching" };
        forecasts = Enumerable.Range(1, 5).Select(index => new WeatherForecast
            {
                Date = startDate.AddDays(index),
                TemperatureC = Random.Shared.Next(-20, 55),
                Summary = summaries[Random.Shared.Next(summaries.Length)]
            }).ToArray();
    }

    private class WeatherForecast
    {
        public DateOnly Date { get; set; }
        public int TemperatureC { get; set; }
        public string? Summary { get; set; }
        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
